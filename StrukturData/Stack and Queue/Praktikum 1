import java.io.*;
class Stack {
    private int maxSize;
    private Character[] stackArray;
    private int top;

    public Stack(int size) {
        maxSize = size;
        stackArray = new Character[maxSize];
        top = -1;
    }

    public void push(Character item) {

        stackArray[++top] = item;
    }

    public Character pop() {

        return stackArray[top--];
    }

    public Character peek() {

        return stackArray[top];

    }

    public boolean isEmpty() {
        return (top == -1);
    }

    public boolean isFull() {

        return (top == maxSize - 1);

    }
}
class Pembalik {

    public String PembalikKata(int size, String word) {
        Stack theStack = new Stack(size);

        // menambahkan karakter ke dalam stack
        for (int i = 0; i < word.length(); i ++)
        {
            theStack.push(word.charAt(i));
        }

        // mengeluarkan karakter dari stack
        String out = "";
        while (!theStack.isEmpty())
        {
            out += theStack.pop();

        }


        return out;
    }
}
public class AppPembalik {
    public static void main(String[] args) throws IOException {
        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));

        // soal a
        System.out.println(">> katanya ...");
        String kata = "kasur";

        int size = kata.length();

        Pembalik pembalik = new Pembalik();

        // memanggil method dari class pembalik
        System.out.println(">> dibalik jadi ...");
        System.out.println(pembalik.PembalikKata(size, kata));


        // Soal B
        while (true) {
            System.out.print("Masukkan Kata : ");
            kata = input.readLine();

            size = kata.length();

            pembalik = new Pembalik();

            // memanggil method dari class pembalik
            System.out.print("Kebalikan : ");
            System.out.println(pembalik.PembalikKata(size, kata));
        }
    }
}
